{"ast":null,"code":"import VueApexCharts from 'vue-apexcharts';\nexport default {\n  name: \"TiktokMostUsedHashtag\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  data: function () {\n    return {\n      series: [],\n      chartOptions: {\n        noData: {\n          text: 'Loading...'\n        },\n        chart: {\n          height: '356px',\n          type: 'bar'\n        },\n        dataLabels: {\n          enabled: false,\n          //   textAnchor: 'middle',\n          //   style: {\n          //     colors: ['#ffffff'],\n          //     fontSize: '14px'\n          //   },\n          formatter: function (val, opt) {\n            return opt.w.globals.labels[Number(opt.dataPointIndex)];\n          }\n          //   offsetX: 0,\n        },\n\n        plotOptions: {\n          bar: {\n            borderRadius: 7,\n            borderRadiusApplication: 'around',\n            horizontal: true,\n            columnWidth: '50%'\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            // shade: 'dark',\n            type: \"horizontal\",\n            shadeIntensity: 0.5,\n            gradientToColors: ['#ffcf92'],\n            // optional, if not defined - uses the shades of same color in series\n            inverseColors: true,\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 50, 100],\n            colorStops: []\n          }\n        },\n        colors: ['#dd4ee5'],\n        // legend: {\n        //   show: false\n        // },\n        yaxis: {\n          type: 'category',\n          labels: {\n            show: true,\n            trim: true,\n            style: {\n              colors: [],\n              fontSize: '14px',\n              fontFamily: 'Cairo, sans-serif',\n              fontWeight: 400,\n              cssClass: 'apexcharts-xaxis-label'\n            }\n            // formatter: (value) => {\n            //   return Number(value).toLocaleString()\n            // }\n          }\n        },\n\n        xaxis: {\n          labels: {\n            show: true,\n            formatter: value => {\n              return Number(value).toLocaleString();\n            }\n          },\n          title: {\n            text: 'Occurrence',\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              color: undefined,\n              fontSize: '14px',\n              fontFamily: 'Cairo, sans-serif',\n              fontWeight: 600\n              // cssClass: 'apexcharts-xaxis-title',\n            }\n          }\n        },\n\n        tooltip: {\n          theme: 'light',\n          custom: function ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) {\n            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\n            return '<div class=\"arrow_box\">' + \"<ul>\" + \"<span>\" + \"<li>\" +\n            // w.globals.labels[dataPointIndex] +\n            w.globals.labels[dataPointIndex] + \": \" + series[seriesIndex][dataPointIndex].toLocaleString() + \"</li>\" + \"</span>\" + \"</ul>\" + \"</div>\";\n          }\n        }\n      },\n      selection: '1W'\n    };\n  },\n  methods: {\n    async getRecentTens() {\n      const {\n        data\n      } = await this.axios.get('http://localhost/api/tiktok/hashtags/most-used/recent-ten-posts');\n      this.TopTenUsed = data[\"result\"];\n      // console.log(this.TopTenUsed)\n\n      // Format data correctly\n      let hashtags = this.TopTenUsed.map((e, i) => {\n        return {\n          x: e._id,\n          y: e.count\n        };\n      });\n\n      // update the series with axios data\n      this.series = [{\n        name: 'Counts',\n        data: hashtags\n      }];\n    },\n    async getRecentThirtys() {\n      const {\n        data\n      } = await this.axios.get('http://localhost/api/tiktok/hashtags/most-used/recent-thirty-posts');\n      this.TopTenUsed = data[\"result\"];\n      // console.log(this.TopTenUsed)\n\n      // Format data correctly\n      let hashtags = this.TopTenUsed.map((e, i) => {\n        return {\n          x: e._id,\n          y: e.count\n        };\n      });\n\n      // update the series with axios data\n      this.series = [{\n        name: 'Counts',\n        data: hashtags\n      }];\n      chart.updateSeries(this.series);\n    },\n    async getOveralls() {\n      const {\n        data\n      } = await this.axios.get('http://localhost/api/tiktok/hashtags/most-used/overall-posts');\n      this.TopTenUsed = data[\"result\"];\n      // console.log(this.TopTenUsed)\n\n      // Format data correctly\n      let hashtags = this.TopTenUsed.map((e, i) => {\n        return {\n          x: e._id,\n          y: e.count\n        };\n      });\n\n      // update the series with axios data\n      this.series = [{\n        name: 'Counts',\n        data: hashtags\n      }];\n      chart.updateSeries(this.series);\n    }\n  },\n  created() {\n    this.getRecentTens();\n    this.getRecentThirtys();\n    this.getOveralls();\n  },\n  mounted:\n  //set latest 10 posts as default\n  function () {\n    this.getRecentTens(() => {\n      this.getRecentThirtys();\n      this.getOveralls();\n    });\n  }\n};","map":{"version":3,"names":["VueApexCharts","name","components","apexchart","data","series","chartOptions","noData","text","chart","height","type","dataLabels","enabled","formatter","val","opt","w","globals","labels","Number","dataPointIndex","plotOptions","bar","borderRadius","borderRadiusApplication","horizontal","columnWidth","fill","gradient","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","colorStops","colors","yaxis","show","trim","style","fontSize","fontFamily","fontWeight","cssClass","xaxis","value","toLocaleString","title","offsetX","offsetY","color","undefined","tooltip","theme","custom","seriesIndex","initialSeries","selection","methods","getRecentTens","axios","get","TopTenUsed","hashtags","map","e","i","x","_id","y","count","getRecentThirtys","updateSeries","getOveralls","created","mounted"],"sources":["src/components/TiktokMostUsedHashtag.vue"],"sourcesContent":["<template>\r\n  <div id=\"tiktok-most-used-hashtag\">\r\n    <div class=\"toolbar\">\r\n      <v-row justify=\"end\">\r\n        <v-col cols=\"12\">\r\n          <v-btn\r\n              outlined\r\n              small\r\n              rounded\r\n              color=\"blue-grey lighten-1\"\r\n              dark\r\n              elevation=\"1\"\r\n              class=\"mr-3\"\r\n              @click=\"getRecentTens()\"\r\n          >\r\n            {{ $t('Latest 10 Posts(Default)') }}\r\n          </v-btn>\r\n          <v-btn\r\n              outlined\r\n              small\r\n              rounded\r\n              color=\"blue-grey lighten-1\"\r\n              dark\r\n              elevation=\"1\"\r\n              class=\"mr-3\"\r\n              @click=\"getRecentThirtys()\"\r\n          >\r\n            {{ $t('Latest 30 Posts') }}\r\n          </v-btn>\r\n          <v-btn\r\n              small\r\n              outlined\r\n              rounded\r\n              color=\"blue-grey lighten-1\"\r\n              dark\r\n              elevation=\"1\"\r\n              class=\"mr-3\"\r\n              @click=\"getOveralls()\"\r\n          >\r\n            {{ $t('All Posts') }}\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n    <apexchart\r\n        ref=\"sample\"\r\n        width=\"100%\"\r\n        :options=\"chartOptions\"\r\n        :series=\"series\"\r\n        height=\"350\"\r\n    >\r\n    </apexchart>\r\n  </div>\r\n</template>\r\n<script>\r\nimport VueApexCharts from 'vue-apexcharts'\r\nexport default {\r\n  name: \"TiktokMostUsedHashtag\",\r\n  components: {\r\n    apexchart: VueApexCharts,\r\n  },\r\n  data: function () {\r\n    return {\r\n      series: [],\r\n      chartOptions: {\r\n        noData: {\r\n          text: 'Loading...'\r\n        },\r\n        chart: {\r\n          height: '356px',\r\n          type: 'bar',\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        //   textAnchor: 'middle',\r\n        //   style: {\r\n        //     colors: ['#ffffff'],\r\n        //     fontSize: '14px'\r\n        //   },\r\n          formatter: function (val, opt) {\r\n            return opt.w.globals.labels[Number(opt.dataPointIndex)]\r\n          },\r\n        //   offsetX: 0,\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            borderRadius: 7,\r\n            borderRadiusApplication: 'around',\r\n            horizontal: true,\r\n            columnWidth: '50%',\r\n          }\r\n        },\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            // shade: 'dark',\r\n            type: \"horizontal\",\r\n            shadeIntensity: 0.5,\r\n            gradientToColors: ['#ffcf92'], // optional, if not defined - uses the shades of same color in series\r\n            inverseColors: true,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 50, 100],\r\n            colorStops: []\r\n          }\r\n        },\r\n        colors: ['#dd4ee5'],\r\n        // legend: {\r\n        //   show: false\r\n        // },\r\n        yaxis: {\r\n          type: 'category',\r\n          labels: {\r\n            show: true,\r\n            trim: true,\r\n            style: {\r\n              colors: [],\r\n              fontSize: '14px',\r\n              fontFamily: 'Cairo, sans-serif',\r\n              fontWeight: 400,\r\n              cssClass: 'apexcharts-xaxis-label',\r\n            },\r\n            // formatter: (value) => {\r\n            //   return Number(value).toLocaleString()\r\n            // }\r\n          },\r\n        },\r\n        xaxis: {\r\n          labels: {\r\n            show: true,\r\n            formatter: (value) => {\r\n              return Number(value).toLocaleString()\r\n            }\r\n          },\r\n          title: {\r\n            text: 'Occurrence',\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            style: {\r\n              color: undefined,\r\n              fontSize: '14px',\r\n              fontFamily: 'Cairo, sans-serif',\r\n              fontWeight: 600,\r\n              // cssClass: 'apexcharts-xaxis-title',\r\n            },\r\n          },\r\n        },\r\n        tooltip: {\r\n          theme: 'light',\r\n          custom: function ({series, seriesIndex, dataPointIndex, w}) {\r\n            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\r\n            return (\r\n                '<div class=\"arrow_box\">' +\r\n                \"<ul>\" +\r\n                \"<span>\" +\r\n                \"<li>\" +\r\n                // w.globals.labels[dataPointIndex] +\r\n                w.globals.labels[dataPointIndex] +\r\n                \": \" +\r\n                (series[seriesIndex][dataPointIndex]).toLocaleString() +\r\n                \"</li>\" +\r\n                \"</span>\" +\r\n                \"</ul>\" +\r\n                \"</div>\"\r\n            );\r\n          }\r\n        }\r\n      },\r\n      selection: '1W'\r\n    }\r\n  },\r\n  methods: {\r\n    async getRecentTens() {\r\n      const {data} = await this.axios.get('http://localhost/api/tiktok/hashtags/most-used/recent-ten-posts')\r\n      this.TopTenUsed = data[\"result\"]\r\n      // console.log(this.TopTenUsed)\r\n\r\n      // Format data correctly\r\n      let hashtags = this.TopTenUsed.map((e, i) => {\r\n        return {\r\n          x: e._id,\r\n          y: e.count,\r\n        };\r\n      });\r\n\r\n      // update the series with axios data\r\n      this.series = [\r\n        {\r\n          name: 'Counts',\r\n          data: hashtags,\r\n        }\r\n      ];\r\n\r\n    },\r\n    async getRecentThirtys() {\r\n      const {data} = await this.axios.get('http://localhost/api/tiktok/hashtags/most-used/recent-thirty-posts')\r\n      this.TopTenUsed = data[\"result\"]\r\n      // console.log(this.TopTenUsed)\r\n\r\n      // Format data correctly\r\n      let hashtags = this.TopTenUsed.map((e, i) => {\r\n        return {\r\n          x: e._id,\r\n          y: e.count,\r\n        };\r\n      });\r\n\r\n      // update the series with axios data\r\n      this.series = [\r\n        {\r\n          name: 'Counts',\r\n          data: hashtags,\r\n        }\r\n      ];\r\n      chart.updateSeries(this.series)\r\n    },\r\n    async getOveralls() {\r\n      const {data} = await this.axios.get('http://localhost/api/tiktok/hashtags/most-used/overall-posts')\r\n      this.TopTenUsed = data[\"result\"]\r\n      // console.log(this.TopTenUsed)\r\n\r\n      // Format data correctly\r\n      let hashtags = this.TopTenUsed.map((e, i) => {\r\n        return {\r\n          x: e._id,\r\n          y: e.count,\r\n        };\r\n      });\r\n\r\n      // update the series with axios data\r\n      this.series = [\r\n        {\r\n          name: 'Counts',\r\n          data: hashtags,\r\n        }\r\n      ];\r\n      chart.updateSeries(this.series)\r\n    },\r\n  },\r\n  created() {\r\n    this.getRecentTens();\r\n    this.getRecentThirtys();\r\n    this.getOveralls();\r\n  },\r\n  mounted: //set latest 10 posts as default\r\n      function () {\r\n        this.getRecentTens(() => {\r\n        this.getRecentThirtys();\r\n        this.getOveralls();\r\n      })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Cairo&display=swap');\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}