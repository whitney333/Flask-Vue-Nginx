{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport firebaseConfig from \"../firebaseConfig\";\nimport { FacebookAuthProvider, GoogleAuthProvider, getAuth, signInWithPopup, signOut } from \"firebase/auth\";\nfirebaseConfig;\nconst provider = new GoogleAuthProvider();\nconst fb_provider = new FacebookAuthProvider();\nconst auth = getAuth();\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      user: '',\n      isSignedIn: false,\n      show_pwd: false,\n      login_form: {\n        email: '',\n        password: ''\n      },\n      loginRules: {\n        emailRules: [v => !!v || 'E-mail is required', v => /.+@.+/.test(v) || 'E-mail must be valid']\n      }\n    };\n  },\n  methods: {\n    handleSignInGoogle() {\n      signInWithPopup(auth, provider).then(result => {\n        // The signed-in user info.\n        // const user = result.user;\n        // console.log(result)\n        this.user = result.user.displayName;\n        this.isSignedIn = true;\n        // store jwt token\n        localStorage.setItem('token', JSON.stringify(result.user.idToken));\n        this.$router.push(\"/\");\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    handleSignInFacebook() {\n      signInWithPopup(auth, fb_provider).then(result => {\n        // The signed-in user info.\n        const user = result.user;\n\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        const credential = FacebookAuthProvider.credentialFromResult(result);\n        const accessToken = credential.accessToken;\n        console.log(result);\n        this.user = result.user.displayName;\n        this.isSignedIn = true;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    handleSignOut() {\n      signOut(auth).then(() => {\n        this.user = '';\n        this.isSignedIn = false;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.handleSignInGoogle();\n    this.handleSignOut();\n  }\n};","map":{"version":3,"names":["firebaseConfig","FacebookAuthProvider","GoogleAuthProvider","getAuth","signInWithPopup","signOut","provider","fb_provider","auth","name","data","user","isSignedIn","show_pwd","login_form","email","password","loginRules","emailRules","v","test","methods","handleSignInGoogle","then","result","displayName","localStorage","setItem","JSON","stringify","idToken","$router","push","catch","error","console","log","handleSignInFacebook","credential","credentialFromResult","accessToken","handleSignOut","created"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n<!--  <div class=\"hello\">-->\r\n<!--    <h1 class=\"display-2 font-weight-bold mb-3\">-->\r\n<!--      Welcome to Vuetify-->\r\n<!--    </h1>-->\r\n<!--    <h2 v-if=\"user\">{{ user }}</h2>-->\r\n\r\n<!--    <br/>-->\r\n<!--    <div id=\"logout\" v-if=\"isSignedIn\">-->\r\n<!--      <v-btn @click=\"handleSignOut\">logout</v-btn>-->\r\n<!--    </div>-->\r\n\r\n<!--    <br/>-->\r\n<!--    <div id=\"GoogleSignIn\" v-if=\"isSignedIn\">-->\r\n<!--      <h3>Google Signin</h3>-->\r\n<!--      <v-btn @click.prevent=\"handleSignInGoogle\">login</v-btn>-->\r\n<!--    </div>-->\r\n\r\n<!--    <br/>-->\r\n<!--    <div id=\"FacebookSignIn\" v-if=\"isSignedIn\">-->\r\n<!--      <h3>Facebook Signin</h3>-->\r\n<!--      <v-btn @click=\"handleSignInFacebook\">login</v-btn>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n  <div class=\"welcome-wrapper\">\r\n    <div class=\"welcome-block\">\r\n      <div class=\"logo-holder\">\r\n        <img src=\"@/assets/img/mishkan-logo.svg\" alt=\"Mishkan\"/>\r\n      </div>\r\n      <div class=\"title-holder\">\r\n        <h3>Log in</h3>\r\n      </div>\r\n      <div class=\"form-holder\">\r\n        <form ref=\"form\" @submit.prevent=\"login\" id=\"login-form\">\r\n          <v-text-field\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              :rules=\"loginRules.emailRules\"\r\n              required\r\n              filled\r\n              dense\r\n              color=\"indigo\"\r\n              rounded\r\n              v-model=\"login_form.email\"\r\n          >\r\n          </v-text-field>\r\n          <v-text-field\r\n              name=\"password\"\r\n              v-model=\"login_form.password\"\r\n              :append-icon=\"show_pwd ? 'mdi-eye' : 'mdi-eye-off'\"\r\n              :type=\"show_pwd ? 'text' : 'password'\"\r\n              label=\"Password\"\r\n              counter\r\n              :rules=\"loginRules.pwdRules\"\r\n              @click:append=\"show_pwd = !show_pwd\"\r\n              rounded\r\n              required\r\n              filled\r\n              dense\r\n              color=\"indigo\"\r\n          >\r\n          </v-text-field>\r\n          <div class=\"input-holder\">\r\n            <v-checkbox label=\"Remember me\"></v-checkbox>\r\n          </div>\r\n          <div class=\"input-holder\">\r\n            <v-row justify=\"center\">\r\n              <v-col cols=\"6\">\r\n                <button class=\"c-btn\" v-on:click=\"login()\">Log In</button>\r\n              </v-col>\r\n            </v-row>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"link-holder\">\r\n        <a href=\"#\">Forgot Password?</a>\r\n      </div>\r\n      <div class=\"devider-holder\">\r\n        <span>or continue with</span>\r\n      </div>\r\n      <div class=\"buttons-holder\">\r\n        <a class=\"link-btn fb-type\" href=\"#\">Facebook</a>\r\n        <v-btn class=\"link-btn g-type\" @click.prevent=\"handleSignInGoogle\">Google</v-btn>\r\n      </div>\r\n      <div class=\"link-holder\">\r\n        <p>Donâ€™t have an account? Sign up</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport firebaseConfig from \"../firebaseConfig\";\r\nimport { FacebookAuthProvider, GoogleAuthProvider, getAuth, signInWithPopup, signOut } from \"firebase/auth\";\r\n\r\nfirebaseConfig\r\n\r\nconst provider = new GoogleAuthProvider();\r\nconst fb_provider = new FacebookAuthProvider();\r\nconst auth = getAuth();\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      user: '',\r\n      isSignedIn: false,\r\n      show_pwd: false,\r\n      login_form: {\r\n        email: '',\r\n        password: ''\r\n      },\r\n      loginRules: {\r\n        emailRules: [\r\n          v => !!v || 'E-mail is required',\r\n          v => /.+@.+/.test(v) || 'E-mail must be valid',\r\n        ],\r\n      }\r\n    }\r\n  },\r\n methods: {\r\n    handleSignInGoogle() {\r\n      signInWithPopup(auth, provider)\r\n          .then((result) => {\r\n            // The signed-in user info.\r\n            // const user = result.user;\r\n            // console.log(result)\r\n            this.user = result.user.displayName;\r\n            this.isSignedIn = true;\r\n            // store jwt token\r\n            localStorage.setItem('token', JSON.stringify(result.user.idToken));\r\n            this.$router.push(\"/\");\r\n          }).catch((error) => {\r\n            console.log(error)\r\n      });\r\n    },\r\n   handleSignInFacebook() {\r\n     signInWithPopup(auth, fb_provider)\r\n         .then((result) => {\r\n           // The signed-in user info.\r\n           const user = result.user;\r\n\r\n           // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n           const credential = FacebookAuthProvider.credentialFromResult(result);\r\n           const accessToken = credential.accessToken;\r\n\r\n           console.log(result)\r\n           this.user = result.user.displayName;\r\n           this.isSignedIn = true;\r\n         })\r\n         .catch((error) => {\r\n           console.log(error)\r\n         });\r\n   },\r\n    handleSignOut() {\r\n      signOut(auth).then(() => {\r\n        this.user = '';\r\n        this.isSignedIn = false;\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n    }\r\n },\r\n  created() {\r\n    this.handleSignInGoogle();\r\n    this.handleSignOut();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n</style>"],"mappings":";AA2FA,OAAAA,cAAA;AACA,SAAAC,oBAAA,EAAAC,kBAAA,EAAAC,OAAA,EAAAC,eAAA,EAAAC,OAAA;AAEAL,cAAA;AAEA,MAAAM,QAAA,OAAAJ,kBAAA;AACA,MAAAK,WAAA,OAAAN,oBAAA;AACA,MAAAO,IAAA,GAAAL,OAAA;AAEA;EACAM,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,UAAA;MACAC,QAAA;MACAC,UAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAC,UAAA,GACAC,CAAA,MAAAA,CAAA,0BACAA,CAAA,YAAAC,IAAA,CAAAD,CAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,mBAAA;MACAlB,eAAA,CAAAI,IAAA,EAAAF,QAAA,EACAiB,IAAA,CAAAC,MAAA;QACA;QACA;QACA;QACA,KAAAb,IAAA,GAAAa,MAAA,CAAAb,IAAA,CAAAc,WAAA;QACA,KAAAb,UAAA;QACA;QACAc,YAAA,CAAAC,OAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAL,MAAA,CAAAb,IAAA,CAAAmB,OAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAG,qBAAA;MACAjC,eAAA,CAAAI,IAAA,EAAAD,WAAA,EACAgB,IAAA,CAAAC,MAAA;QACA;QACA,MAAAb,IAAA,GAAAa,MAAA,CAAAb,IAAA;;QAEA;QACA,MAAA2B,UAAA,GAAArC,oBAAA,CAAAsC,oBAAA,CAAAf,MAAA;QACA,MAAAgB,WAAA,GAAAF,UAAA,CAAAE,WAAA;QAEAL,OAAA,CAAAC,GAAA,CAAAZ,MAAA;QACA,KAAAb,IAAA,GAAAa,MAAA,CAAAb,IAAA,CAAAc,WAAA;QACA,KAAAb,UAAA;MACA,GACAqB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAO,cAAA;MACApC,OAAA,CAAAG,IAAA,EAAAe,IAAA;QACA,KAAAZ,IAAA;QACA,KAAAC,UAAA;MACA,GAAAqB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;EACAQ,QAAA;IACA,KAAApB,kBAAA;IACA,KAAAmB,aAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}