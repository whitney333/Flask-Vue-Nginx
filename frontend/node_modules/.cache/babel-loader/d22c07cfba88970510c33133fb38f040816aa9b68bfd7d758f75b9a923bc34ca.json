{"ast":null,"code":"import VueApexCharts from \"vue-apexcharts\";\nexport default {\n  name: \"HPTwitterFollower\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      series: [],\n      range: \"three_month\",\n      end: new Date().toISOString().slice(0, 10),\n      latest_date: \"\",\n      latest_follower_count: \"\",\n      past_month_follower_count: \"\",\n      index_number: \"\",\n      chartOptions: {\n        chart: {\n          id: 'twitter-total-follower',\n          height: '100%',\n          width: '100%',\n          type: 'area',\n          toolbar: {\n            tools: {\n              download: false,\n              selection: false,\n              zoom: false,\n              zoomin: false,\n              zoomout: false,\n              pan: false,\n              reset: false\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 3,\n          dashArray: [0, 2]\n        },\n        xaxis: {\n          // categories: [],\n          type: 'datetime',\n          labels: {\n            format: 'MM/dd',\n            rotate: -45,\n            trim: true,\n            style: {\n              fontSize: '12px',\n              fontWeight: 'bold',\n              fontFamily: 'Cairo'\n            }\n          },\n          tickAmount: 4,\n          tooltip: {\n            enabled: false\n          }\n        },\n        tooltip: {\n          theme: 'light',\n          custom: function ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) {\n            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\n            return '<div class=\"arrow_box\">' + new Date(data.x).toDateString() + \"<ul>\" + \"<span>\" + \"<li>\" +\n            // w.globals.labels[dataPointIndex] +\n            \"Followers: \" + series[0][dataPointIndex].toLocaleString() + \"</li>\" + \"</span>\" + \"</ul>\" + \"</div>\";\n          }\n        },\n        legend: {\n          fontSize: '14px',\n          fontWeight: 'bold',\n          fontFamily: 'Cairo',\n          position: 'top',\n          horizontalAlign: 'left'\n        },\n        yaxis: [{\n          tickAmount: 4,\n          labels: {\n            style: {\n              fontSize: '12px',\n              fontWeight: 'bold',\n              fontFamily: 'Cairo'\n            },\n            formatter: function (value) {\n              if (String(value).length < 4) {\n                return Number(value).toLocaleString();\n              } else if (String(value).length < 7) {\n                return Number(value / 1000).toLocaleString() + 'K';\n              } else if (String(value).length < 10) {\n                return Number(value / 1000000).toLocaleString() + 'M';\n              } else {\n                return Number(value / 1000000000).toLocaleString() + 'B';\n              }\n            }\n          }\n        }],\n        colors: ['#1DA1F2'],\n        grid: {\n          show: false\n        }\n      },\n      selection: 'one_month'\n    };\n  },\n  methods: {\n    async get_twitter_follower() {\n      const {\n        data\n      } = await this.axios.get(\"http://localhost/api/twitter/index?\" + \"end=\" + this.end + \"&range=\" + this.range, {\n        setTimeout: 10000\n      });\n      this.twitter_follower = data[\"result\"];\n      this.index_number = data[\"result\"][data[\"result\"].length - 1][\"twitter_follower\"];\n      // console.log(this.last_update)\n\n      let formattedData = this.twitter_follower.map((e, i) => {\n        return {\n          x: e.datetime,\n          y: e.twitter_follower\n        };\n      });\n      // update the series with axios data\n      this.series = [{\n        name: \"Followers\",\n        data: formattedData\n      }];\n    }\n  },\n  filters: {\n    formatNumber: function (value) {\n      if (String(value).length < 4) {\n        return Number(value).toLocaleString();\n      } else if (String(value).length < 7) {\n        return Number(value / 1000).toLocaleString() + 'K';\n      } else if (String(value).length < 10) {\n        return Number(value / 1000000).toLocaleString() + 'M';\n      } else {\n        return Number(value / 1000000000).toLocaleString() + 'B';\n      }\n    }\n  },\n  created() {\n    this.get_twitter_follower();\n  }\n};","map":{"version":3,"names":["VueApexCharts","name","components","apexchart","data","series","range","end","Date","toISOString","slice","latest_date","latest_follower_count","past_month_follower_count","index_number","chartOptions","chart","id","height","width","type","toolbar","tools","download","selection","zoom","zoomin","zoomout","pan","reset","dataLabels","enabled","stroke","curve","dashArray","xaxis","labels","format","rotate","trim","style","fontSize","fontWeight","fontFamily","tickAmount","tooltip","theme","custom","seriesIndex","dataPointIndex","w","globals","initialSeries","x","toDateString","toLocaleString","legend","position","horizontalAlign","yaxis","formatter","value","String","length","Number","colors","grid","show","methods","get_twitter_follower","axios","get","setTimeout","twitter_follower","formattedData","map","e","i","datetime","y","filters","formatNumber","created"],"sources":["src/components/HPTwitterFollower.vue"],"sourcesContent":["<template>\r\n  <div id=\"twitter-follower-chart\">\r\n    <div class=\"toolbar\">\r\n      <v-row justify=\"end\">\r\n        <v-col cols=\"12\">\r\n          <div class=\"index_number\">\r\n            <a href=\"https://twitter.com/t024_official\">\r\n              <v-img\r\n                src=\"https://mishkan-ltd.s3.ap-northeast-2.amazonaws.com/web-img/twitter-logo.svg\"\r\n                max-height=\"30px\"\r\n                max-width=\"30px\"\r\n                class=\"mr-3\"\r\n            ></v-img>\r\n            </a>\r\n            {{ Number(this.index_number) | formatNumber }}\r\n          </div>\r\n          {{ $t(\"Followers\") }}\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n    <apexchart\r\n        ref=\"chart\"\r\n        :options=\"chartOptions\"\r\n        :series=\"series\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n    >\r\n    </apexchart>\r\n  </div>\r\n</template>\r\n<script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\n\r\nexport default {\r\n  name: \"HPTwitterFollower\",\r\n  components: {\r\n    apexchart: VueApexCharts,\r\n  },\r\n  data() {\r\n    return {\r\n      series: [],\r\n      range: \"three_month\",\r\n      end: new Date().toISOString().slice(0, 10),\r\n      latest_date: \"\",\r\n      latest_follower_count: \"\",\r\n      past_month_follower_count: \"\",\r\n      index_number: \"\",\r\n      chartOptions: {\r\n        chart: {\r\n          id: 'twitter-total-follower',\r\n          height: '100%',\r\n          width: '100%',\r\n          type: 'area',\r\n          toolbar: {\r\n            tools: {\r\n              download: false,\r\n              selection: false,\r\n              zoom: false,\r\n              zoomin: false,\r\n              zoomout: false,\r\n              pan: false,\r\n              reset: false\r\n            }\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n          width: 3,\r\n          dashArray: [0, 2]\r\n        },\r\n        xaxis: {\r\n          // categories: [],\r\n          type: 'datetime',\r\n          labels: {\r\n            format: 'MM/dd',\r\n            rotate: -45,\r\n            trim: true,\r\n            style: {\r\n              fontSize: '12px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Cairo',\r\n            }\r\n          },\r\n          tickAmount: 4,\r\n          tooltip: {\r\n            enabled: false\r\n          }\r\n        },\r\n        tooltip: {\r\n          theme: 'light',\r\n          custom: function ({series, seriesIndex, dataPointIndex, w}) {\r\n            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\r\n            return (\r\n                '<div class=\"arrow_box\">' +\r\n                new Date(data.x).toDateString() +\r\n                \"<ul>\" +\r\n                \"<span>\" +\r\n                \"<li>\" +\r\n                // w.globals.labels[dataPointIndex] +\r\n                \"Followers: \" +\r\n                (series[0][dataPointIndex]).toLocaleString() +\r\n                \"</li>\" +\r\n                \"</span>\" +\r\n                \"</ul>\" +\r\n                \"</div>\"\r\n            );\r\n          }\r\n        },\r\n        legend: {\r\n          fontSize: '14px',\r\n          fontWeight: 'bold',\r\n          fontFamily: 'Cairo',\r\n          position: 'top',\r\n          horizontalAlign: 'left'\r\n        },\r\n        yaxis: [\r\n          {\r\n            tickAmount: 4,\r\n            labels: {\r\n              style: {\r\n                fontSize: '12px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Cairo',\r\n              },\r\n              formatter: function (value) {\r\n                if (String(value).length < 4) {\r\n                  return Number(value).toLocaleString();\r\n                } else if (String(value).length < 7) {\r\n                  return Number(value / 1000).toLocaleString() + 'K';\r\n                } else if (String(value).length < 10) {\r\n                  return Number(value / 1000000).toLocaleString() + 'M';\r\n                } else {\r\n                  return Number(value / 1000000000).toLocaleString() + 'B';\r\n                }\r\n              },\r\n            }\r\n          },\r\n        ],\r\n        colors: ['#1DA1F2'],\r\n        grid: {\r\n          show: false\r\n        }\r\n      },\r\n      selection: 'one_month'\r\n    }\r\n  },\r\n  methods: {\r\n    async get_twitter_follower() {\r\n      const {data} = await this.axios.get(\"http://localhost/api/twitter/index?\"\r\n          + \"end=\" + this.end\r\n          + \"&range=\" + this.range,\r\n          {setTimeout: 10000})\r\n      this.twitter_follower = data[\"result\"]\r\n      this.index_number = data[\"result\"][data[\"result\"].length - 1][\"twitter_follower\"]\r\n      // console.log(this.last_update)\r\n\r\n      let formattedData = this.twitter_follower.map((e, i) => {\r\n        return {\r\n          x: e.datetime,\r\n          y: e.twitter_follower,\r\n        };\r\n      });\r\n      // update the series with axios data\r\n      this.series = [\r\n        {\r\n          name: \"Followers\",\r\n          data: formattedData,\r\n        }\r\n      ]\r\n    },\r\n  },\r\n  filters: {\r\n    formatNumber: function (value) {\r\n      if (String(value).length < 4) {\r\n        return Number(value).toLocaleString();\r\n      } else if (String(value).length < 7) {\r\n        return Number(value / 1000).toLocaleString() + 'K';\r\n      } else if (String(value).length < 10) {\r\n        return Number(value / 1000000).toLocaleString() + 'M';\r\n      } else {\r\n        return Number(value / 1000000000).toLocaleString() + 'B';\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n      this.get_twitter_follower();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}