{"ast":null,"code":"import VueApexCharts from \"vue-apexcharts\";\nexport default {\n  name: \"HPSpotifyFollower\",\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      overlay: true,\n      series: [],\n      range: \"three_month\",\n      end: new Date().toISOString().slice(0, 10),\n      latest_follower_count: \"\",\n      past_month_follower_count: \"\",\n      index_number: \"\",\n      latest_date: \"\",\n      chartOptions: {\n        chart: {\n          height: '100%',\n          width: '100%',\n          type: 'area',\n          toolbar: {\n            tools: {\n              download: false,\n              selection: false,\n              zoom: false,\n              zoomin: false,\n              zoomout: false,\n              pan: false,\n              reset: false\n            }\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 3\n        },\n        xaxis: {\n          // categories: [],\n          type: 'datetime',\n          labels: {\n            format: 'MM/dd',\n            rotate: -45,\n            trim: true,\n            style: {\n              fontSize: '12px',\n              fontWeight: 'bold',\n              fontFamily: 'Cairo'\n            }\n          },\n          tickAmount: 4,\n          tooltip: {\n            enabled: false\n          }\n        },\n        tooltip: {\n          theme: 'light',\n          x: {\n            show: false\n          },\n          custom: function ({\n            series,\n            seriesIndex,\n            dataPointIndex,\n            w\n          }) {\n            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\n            return '<div class=\"arrow_box\">' + new Date(data.x).toDateString() + \"<ul>\" + \"<li>\" + \"<span>\" +\n            // w.globals.labels[dataPointIndex] +\n            \"Total Followers: \" + series[0][dataPointIndex].toLocaleString() + \"</span>\" + \"</li>\" + \"</ul>\" + \"</div>\";\n          }\n        },\n        title: {\n          // text: 'Followers',\n          // style: {\n          //   fontSize: '20px',\n          //   fontWeight: 'bold',\n          //   fontFamily: 'Cairo',\n          // },\n          // align: 'left'\n        },\n        yaxis: {\n          tickAmount: 4,\n          labels: {\n            formatter: function (value) {\n              if (String(value).length < 4) {\n                return Number(value).toLocaleString();\n              } else if (String(value).length < 7) {\n                return Number(value / 1000).toLocaleString() + 'K';\n              } else if (String(value).length < 10) {\n                return Number(value / 1000000).toLocaleString() + 'M';\n              } else {\n                return Number(value / 1000000000).toLocaleString() + 'B';\n              }\n            },\n            style: {\n              fontSize: '12px',\n              fontWeight: 'bold',\n              fontFamily: 'Cairo'\n            }\n          }\n        },\n        colors: ['#1DB954'],\n        grid: {\n          show: false\n        }\n      }\n    };\n  },\n  methods: {\n    async get_spotify_follower() {\n      const {\n        data\n      } = await this.axios.get(\"http://localhost/api/spotify/index?\" + \"end=\" + this.end + \"&range=\" + this.range, {\n        setTimeout: 10000\n      });\n      this.range = data[\"range\"];\n      this.follower = data[\"posts\"];\n      this.index_number = data[\"posts\"][data[\"posts\"].length - 1][\"follower\"];\n      // console.log(this.range)\n\n      let formattedData = this.follower.map((e, i) => {\n        return {\n          x: e.date,\n          y: e.follower\n        };\n      });\n      // update the series with axios data\n      this.series = [{\n        name: \"Total Followers\",\n        data: formattedData\n      }];\n    }\n  },\n  filters: {\n    formatNumber: function (value) {\n      if (String(value).length < 4) {\n        return Number(value).toLocaleString();\n      } else if (String(value).length < 7) {\n        return Number(value / 1000).toLocaleString() + 'K';\n      } else if (String(value).length < 10) {\n        return Number(value / 1000000).toLocaleString() + 'M';\n      } else {\n        return Number(value / 1000000000).toLocaleString() + 'B';\n      }\n    }\n  },\n  created() {\n    this.get_spotify_follower();\n  }\n};","map":{"version":3,"names":["VueApexCharts","name","components","apexchart","data","overlay","series","range","end","Date","toISOString","slice","latest_follower_count","past_month_follower_count","index_number","latest_date","chartOptions","chart","height","width","type","toolbar","tools","download","selection","zoom","zoomin","zoomout","pan","reset","dataLabels","enabled","stroke","curve","xaxis","labels","format","rotate","trim","style","fontSize","fontWeight","fontFamily","tickAmount","tooltip","theme","x","show","custom","seriesIndex","dataPointIndex","w","globals","initialSeries","toDateString","toLocaleString","title","yaxis","formatter","value","String","length","Number","colors","grid","methods","get_spotify_follower","axios","get","setTimeout","follower","formattedData","map","e","i","date","y","filters","formatNumber","created"],"sources":["src/components/HPSpotifyFollower.vue"],"sourcesContent":["<template>\r\n  <div id=\"spotify-follower-chart\">\r\n    <div class=\"toolbar\">\r\n      <v-row justify=\"end\">\r\n        <v-col cols=\"12\">\r\n          <div class=\"index_number\">\r\n            <a href=\"https://open.spotify.com/artist/0jxjOumN4dyPFTLUojSbNP\">\r\n              <v-img\r\n                src=\"https://mishkan-ltd.s3.ap-northeast-2.amazonaws.com/web-img/spotify-logo.svg\"\r\n                max-height=\"30px\"\r\n                max-width=\"30px\"\r\n                class=\"mr-3\"\r\n            ></v-img>\r\n            </a>\r\n            {{ Number(this.index_number) | formatNumber }}\r\n          </div>\r\n          {{ $t(\"Followers\") }}\r\n        </v-col>\r\n      </v-row>\r\n    </div>\r\n    <apexchart\r\n        ref=\"chart\"\r\n        :options=\"chartOptions\"\r\n        :series=\"series\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n    >\r\n    </apexchart>\r\n  </div>\r\n</template>\r\n<script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\n\r\nexport default {\r\n  name: \"HPSpotifyFollower\",\r\n  components: {\r\n    apexchart: VueApexCharts,\r\n  },\r\n  data() {\r\n    return {\r\n      overlay: true,\r\n      series: [],\r\n      range: \"three_month\",\r\n      end: new Date().toISOString().slice(0, 10),\r\n      latest_follower_count: \"\",\r\n      past_month_follower_count: \"\",\r\n      index_number: \"\",\r\n      latest_date: \"\",\r\n      chartOptions: {\r\n        chart: {\r\n          height: '100%',\r\n          width: '100%',\r\n          type: 'area',\r\n          toolbar: {\r\n            tools: {\r\n              download: false,\r\n              selection: false,\r\n              zoom: false,\r\n              zoomin: false,\r\n              zoomout: false,\r\n              pan: false,\r\n              reset: false\r\n            }\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n          width: 3,\r\n        },\r\n        xaxis: {\r\n          // categories: [],\r\n          type: 'datetime',\r\n          labels: {\r\n            format: 'MM/dd',\r\n            rotate: -45,\r\n            trim: true,\r\n            style: {\r\n              fontSize: '12px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Cairo',\r\n            }\r\n          },\r\n          tickAmount: 4,\r\n          tooltip: {\r\n            enabled: false\r\n          }\r\n        },\r\n        tooltip: {\r\n          theme: 'light',\r\n          x: {\r\n            show: false\r\n          },\r\n          custom: function ({series, seriesIndex, dataPointIndex, w}) {\r\n            var data = w.globals.initialSeries[seriesIndex].data[dataPointIndex];\r\n            return (\r\n                '<div class=\"arrow_box\">' +\r\n                new Date(data.x).toDateString() +\r\n                \"<ul>\" +\r\n                \"<li>\" +\r\n                \"<span>\" +\r\n                // w.globals.labels[dataPointIndex] +\r\n                \"Total Followers: \" +\r\n                (series[0][dataPointIndex]).toLocaleString() +\r\n                \"</span>\" +\r\n                \"</li>\" +\r\n                \"</ul>\" +\r\n                \"</div>\"\r\n            );\r\n          }\r\n        },\r\n        title: {\r\n          // text: 'Followers',\r\n          // style: {\r\n          //   fontSize: '20px',\r\n          //   fontWeight: 'bold',\r\n          //   fontFamily: 'Cairo',\r\n          // },\r\n          // align: 'left'\r\n        },\r\n        yaxis: {\r\n          tickAmount: 4,\r\n          labels: {\r\n            formatter: function (value) {\r\n              if (String(value).length < 4) {\r\n                return Number(value).toLocaleString();\r\n              } else if (String(value).length < 7) {\r\n                return Number(value / 1000).toLocaleString() + 'K';\r\n              } else if (String(value).length < 10) {\r\n                return Number(value / 1000000).toLocaleString() + 'M';\r\n              } else {\r\n                return Number(value / 1000000000).toLocaleString() + 'B';\r\n              }\r\n            },\r\n            style: {\r\n              fontSize: '12px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Cairo',\r\n            }\r\n          }\r\n        },\r\n        colors: ['#1DB954'],\r\n        grid: {\r\n          show: false\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async get_spotify_follower() {\r\n      const {data} = await this.axios.get(\"http://localhost/api/spotify/index?\" + \"end=\" + this.end + \"&range=\" + this.range,\r\n          {setTimeout: 10000})\r\n\r\n      this.range = data[\"range\"]\r\n      this.follower = data[\"posts\"]\r\n      this.index_number = data[\"posts\"][data[\"posts\"].length - 1][\"follower\"]\r\n      // console.log(this.range)\r\n\r\n      let formattedData = this.follower.map((e, i) => {\r\n        return {\r\n          x: e.date,\r\n          y: e.follower,\r\n        };\r\n      });\r\n      // update the series with axios data\r\n      this.series = [\r\n        {\r\n          name: \"Total Followers\",\r\n          data: formattedData,\r\n        }\r\n      ]\r\n    },\r\n  },\r\n  filters: {\r\n    formatNumber: function (value) {\r\n      if (String(value).length < 4) {\r\n        return Number(value).toLocaleString();\r\n      } else if (String(value).length < 7) {\r\n        return Number(value / 1000).toLocaleString() + 'K';\r\n      } else if (String(value).length < 10) {\r\n        return Number(value / 1000000).toLocaleString() + 'M';\r\n      } else {\r\n        return Number(value / 1000000000).toLocaleString() + 'B';\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.get_spotify_follower();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.toolbar .index_number {\r\n  padding-left: 20px;\r\n  padding-right: 10px;\r\n  color: #000000;\r\n  display: inline-flex;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  font-family: 'Cairo', sans-serif;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}